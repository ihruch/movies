{"version":3,"sources":["redux/reducers/moviesReducer.js","redux/constants/actionTypes.js","redux/constants/globals.js","redux/reducers/seriesReducer.js","redux/reducers/sortingReducer.js","history.js","redux/store.js","components/SingleCard/index.js","api.js","redux/actions/moviesListAction.js","redux/actions/sortingAction.js","components/Spinner/index.js","components/Sorting/index.js","components/MovieListPage/index.js","components/Header/index.js","components/SingleMoviePage/index.js","redux/actions/singleMovieAction.js","redux/actions/seriesListAction.js","components/SeriesListPage/index.js","components/SingleSeriesPage/index.js","redux/actions/singleSeriesAction.js","App.js","redux/constants/routing.js","index.js","logo-db.svg"],"names":["initState","concat","data","loading","error","entitis","ids","idPage","typeSort","history","createHistory","routerMid","routerMiddleware","middleware","thunk","rootReducer","combineReducers","dataMovies","state","arguments","length","undefined","action","type","Object","objectSpread","moviesArr","payload","forEach","movie","id","getOwnPropertyNames","page","dataSeries","seriesArr","series","routing","routerReducer","sorting","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","apply","SingleCard","react_default","a","createElement","Card_default","className","CardMedia_default","image","this","props","img","title","CardContent_default","Typography_default","variant","component","color","dateRelease","description","slice","CardActions_default","Button_default","size","onClick","func","Component","API_URL","API_KEY","Api","getMovieDataList","console","log","fetch","then","json","getSeriesDataList","fetchMovies","dispatch","getState","movies","localStorage","setItem","catch","err","handleSortingData","sort","Spinner","options","value","label","Sorting","_ref","changeFunc","valState","react_select_esm","onChange","placeholder","MovieListPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handelNextBtn","bind","assertThisInitialized","handelPrevBtn","handleChangeSelect","count","selectedOption","nextProps","setState","scrollTo","push","_this2","_this$state","style","paddingTop","components_Sorting","components_Spinner","disabled","map","components_SingleCard","key","release_date","overview","poster_path","handleMoveToSingleCard","connect","newDataMovies","b","Header","href","src","logo","alt","Link","to","SingleCardPageMovie","handleBack","match","params","getItem","Div","styled","div","_templateObject","bgi","singleMovie","backdrop_path","IconButton_default","aria-label","withRouter","fetchSeries","SeriesListPage","first_air_date","name","newdataSeries","SingleCardPageSeries","SingleSeriesPage_templateObject","singleSeries","App","components_Header","Switch","Route","path","SingleMoviePage","SingleSeriesPage","Redirect","ReactDOM","render","es","react_router_redux_es","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.832077d5.chunk.js","sourcesContent":["\r\nimport { FETCH_MOVIES_BEGIN, FETCH_MOVIES_SUCCESS,  FETCH_MOVIES_ERROR, \r\n  } from '../constants/actionTypes.js';\r\n  \r\n  let initState = {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n    entitis: {},\r\n    ids: [],\r\n    idPage: ''\r\n   \r\n  };\r\n  \r\n  export default (state = initState, action) => {\r\n    switch (action.type) {\r\n      \r\n      case 'FETCH_MOVIES_BEGIN': {\r\n        return {\r\n            ...state,\r\n            data: [],     \r\n            loading: true,\r\n            error: null,\r\n        }\r\n      }\r\n\r\n      case 'FETCH_MOVIES_SUCCESS' : {\r\n    \r\n        const moviesArr = action.payload.payload;\r\n        const entitis = {};\r\n\r\n        moviesArr['results'].forEach( movie => {\r\n          entitis[movie.id] = movie;\r\n      })\r\n      const ids = Object.getOwnPropertyNames(entitis);\r\n\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          data: action.payload,\r\n          entitis,\r\n          ids,\r\n          idPage: action.payload.payload.page\r\n        }\r\n      }\r\n\r\n\r\n      case 'FETCH_MOVIES_ERROR' : {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      }\r\n\r\n      default: \r\n        return state;\r\n    }\r\n  \r\n  };","import { MOVIES, SINGLE_MOVIE, SERIES, SINGLE_SERIES } from './globals';\r\n\r\nexport const FETCH_MOVIES_BEGIN   = `${MOVIES}/FETCH_MOVIES_BEGIN`;\r\nexport const FETCH_MOVIES_SUCCESS = `${MOVIES}/FETCH_MOVIES_SUCCESS`;\r\nexport const FETCH_MOVIES_ERROR   = `${MOVIES}/FETCH_MOVIES_ERROR`;\r\n\r\n// export const FETCH_SINGLE_MOVIE_BEGIN   = `${SINGLE_MOVIE}/FETCH_SINGLE_MOVIE_BEGIN`;\r\nexport const FETCH_SINGLE_MOVIE_SUCCESS = `${SINGLE_MOVIE}/FETCH_SINGLE_MOVIE_SUCCESS`;\r\n// export const FETCH_SINGLE_MOVIE_ERROR   = `${SINGLE_MOVIE}/FETCH_SINGLE_MOVIE_ERROR`; \r\n\r\nexport const FETCH_SERIES_BEGIN   = `${SERIES}/FETCH_SERIES_BEGIN`;\r\nexport const FETCH_SERIES_SUCCESS = `${SERIES}/FETCH_SERIES_SUCCESS`;\r\nexport const FETCH_SERIES_ERROR   = `${SERIES}/FETCH_SERIES_ERROR`;\r\n\r\n// export const FETCH_SINGLE_SERIES_BEGIN   = `${SINGLE_SERIES}/FETCH_SINGLE_SERIES_BEGIN`;\r\nexport const FETCH_SINGLE_SERIES_SUCCESS = `${SINGLE_SERIES}/FETCH_SINGLE_SERIES_SUCCESS`;\r\n// export const FETCH_SINGLE_SERIES_ERROR   = `${SINGLE_SERIES}/FETCH_SINGLE_SERIES_ERROR`; \r\n\r\nexport const SORTING_DATA = `SORTING_DATA`;\r\nexport const CLEAR_SORTING_DATA = `CLEAR_SORTING_DATA`;\r\n","export const MOVIES = 'movies';\r\nexport const SINGLE_MOVIE = 'single movie';\r\nexport const SERIES = 'series';\r\nexport const SINGLE_SERIES = 'single series';\r\n","\r\nimport { FETCH_SERIES_BEGIN, FETCH_SERIES_SUCCESS,  FETCH_SERIES_ERROR, \r\n  } from '../constants/actionTypes.js';\r\n  \r\n  let initState = {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n    entitis: {},\r\n    ids: [],\r\n  };\r\n  \r\n  export default (state = initState, action) => {\r\n    \r\n    switch (action.type) {\r\n      case 'FETCH_SERIES_BEGIN': {\r\n        return {\r\n            ...state,\r\n            data: [],     \r\n            loading: true,\r\n            error: null,\r\n        }\r\n      }\r\n\r\n      case 'FETCH_SERIES_SUCCESS' : {\r\n        const seriesArr = action.payload.payload;\r\n        const entitis = {};\r\n        seriesArr['results'].forEach( series => {\r\n          entitis[series.id] = series;\r\n      })\r\n      const ids = Object.getOwnPropertyNames(entitis);\r\n\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          data: action.payload,\r\n          entitis,\r\n          ids,\r\n          idPage: action.payload.payload.page\r\n        }\r\n      }\r\n\r\n\r\n      case 'FETCH_SERIES_ERROR' : {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      }\r\n\r\n      default: \r\n        return state;\r\n    }\r\n  \r\n  };","\r\nimport { SORTING_DATA, CLEAR_SORTING_DATA } from '../constants/actionTypes.js';\r\n\r\nlet initState = {\r\n    typeSort: '' \r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  \r\n    switch(action.type){\r\n        case 'SORTING_DATA' : {\r\n            const typeSort = action.payload;\r\n            return {\r\n                ...state,\r\n                typeSort\r\n            }\r\n        }\r\n\r\n        case 'CLEAR_SORTING_DATA' : {\r\n            return {\r\n                ...state,\r\n                typeSort: {payload : ''}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n  \r\n  \r\n \r\n\r\n};","import createHistory from 'history/createBrowserHistory';\r\nexport const history = createHistory();","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { ConnectedRouter, routerReducer, routerMiddleware, push } from 'react-router-redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport moviesReducer from './reducers/moviesReducer.js';\r\nimport seriesReducer from './reducers/seriesReducer.js';\r\nimport sortingReducer from './reducers/sortingReducer.js';\r\nimport {history} from './../history.js';\r\n\r\nconst routerMid = routerMiddleware(history);\r\nconst middleware = [thunk, routerMid];\r\n\r\nlet rootReducer = combineReducers({\r\n   dataMovies: moviesReducer,\r\n   dataSeries: seriesReducer,\r\n   routing: routerReducer,\r\n   sorting: sortingReducer\r\n})\r\n\r\n\r\nvar store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\n\r\n\r\nexport default store;\r\n\r\n","import React, {Component} from 'react';\r\nimport { withRouter} from \"react-router-dom\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport './style.css';\r\nclass SingleCard  extends Component {\r\n    \r\n    render() {\r\n        return(\r\n            <Card className='single-card-main'>\r\n        \r\n                <CardMedia\r\n                    className='single-card-img'\r\n                    image={this.props.img}\r\n                    title={this.props.title}\r\n                    />\r\n                <div className='single-card-info-block'>\r\n                    <CardContent className='single-card-content'>\r\n                        <Typography variant=\"headline\" component=\"h2\">\r\n                        {this.props.title}\r\n                        \r\n                        </Typography>\r\n                        <Typography  color=\"textSecondary\">\r\n                            {this.props.dateRelease}\r\n                        </Typography>\r\n\r\n                        <Typography component=\"p\">\r\n                            {this.props.description.slice(0, 120)}\r\n                        <br />\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                    <CardActions className='single-card-action'>\r\n                        <Button \r\n                            size=\"small\"\r\n                            onClick={this.props.func}\r\n                            >\r\n                            More\r\n                        </Button>\r\n                    </CardActions>\r\n                </div>\r\n       \r\n            </Card>  \r\n        \r\n        )\r\n    }\r\n}//\r\nexport default SingleCard;\r\n","\r\nconst API_URL = `https://api.themoviedb.org/3/`;\r\nconst API_KEY = 'd73711f75d852eb912c0d4955eb96e08';\r\nconst API_LANG = 'language=ru-RU';\r\n\r\nconst Api = {\r\n\r\n    getMovieDataList: (page) => {\r\n        console.log(\"2\",page)\r\n        return fetch(`${API_URL}movie/popular?api_key=${API_KEY}&${API_LANG}&page=${page}`)\r\n            .then(data => data.json())\r\n            .then(data => { return data })\r\n    },\r\n\r\n    getSeriesDataList: (page) => {\r\n        return fetch(`${API_URL}tv/popular?api_key=${API_KEY}&${API_LANG}&page=${page}`)\r\n            .then(data => data.json())\r\n            .then( data => { return data })\r\n    },\r\n\r\n    // getSingleDataMovie: (id) => {\r\n    //     return fetch(`https://api.themoviedb.org/3/movie/284054?api_key=d73711f75d852eb912c0d4955eb96e08&language=ru-RU`)\r\n    //         .then(data => data.json()) \r\n    //         .then(data => { return data})\r\n    // },\r\n\r\n    // getSingleDataSeries: (id) => {\r\n    //     return fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=d73711f75d852eb912c0d4955eb96e08&language=ru-RU`)\r\n    //         .then(data => data.json()) \r\n    //         .then(data => { return data})\r\n    // }\r\n}\r\nexport default Api;\r\n","import Api from './../../api.js';\r\nimport { MOVIES } from './../constants/globals.js';\r\nimport { FETCH_MOVIES_BEGIN, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_ERROR } from './../constants/actionTypes.js';\r\n\r\n\r\nexport const fetchMoviesBegin = () => ({\r\n     type: 'FETCH_MOVIES_BEGIN'\r\n});\r\n\r\nexport const fetchMoviesSuccess = (payload) => ({\r\n    type: 'FETCH_MOVIES_SUCCESS',\r\n    payload: { payload },\r\n});\r\n\r\nexport const fetchMoviesError = (err) => ({ \r\n  type: 'FETCH_MOVIES_ERROR',\r\n  payload: { err },\r\n})\r\n\r\nexport const fetchMovies = (page) => (dispatch, getState) => {\r\n  dispatch(fetchMoviesBegin());\r\n\r\n  Api.getMovieDataList(page).then( movies => {\r\n    localStorage.setItem('pageListMovie', page);\r\n    dispatch(fetchMoviesSuccess(movies));\r\n  })\r\n  .catch(error => dispatch(fetchMoviesError(error)));\r\n};\r\n\r\n\r\n\r\n","import { SORTING_DATA, CLEAR_SORTING_DATA } from './../constants/actionTypes.js';\r\n\r\n\r\nexport const sortingData = (payload) => ({\r\n    type: 'SORTING_DATA',\r\n    payload: { payload },\r\n});\r\n\r\nexport const clearSortingData = () => ({\r\n  type: 'CLEAR_SORTING_DATA',\r\n});\r\n\r\n\r\nexport const handleSortingData = (sort) => (dispatch, getState) => {\r\n  dispatch(sortingData(sort));\r\n};\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass Spinner extends Component{\r\n    render() {\r\n        return (\r\n            <div className='spinner'>\r\n                <div className='spin'></div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport Select from 'react-select';\r\nimport './style.css';\r\n\r\nconst options = [\r\n    { value: 'asc', label: 'Sort A to Z' },\r\n    { value: 'desc', label: 'Sort Z to A' },\r\n  ];\r\n\r\nfunction Sorting({changeFunc, valState}) {\r\n    return(\r\n        <div className='movies-sorting-block inner-container'>\r\n            <Select\r\n                value={valState}\r\n                onChange={changeFunc}\r\n                options={options}\r\n                className='movies-select'\r\n                placeholder='Sort by name'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sorting;","import React, {Component} from 'react';\r\nimport SingleCard from './../SingleCard';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { fetchMovies } from './../../redux/actions/moviesListAction.js';\r\nimport { handleSortingData, clearSortingData } from './../../redux/actions/sortingAction.js';\r\nimport Spinner  from './../Spinner';\r\nimport Sorting from './../Sorting';\r\n\r\nimport './style.css';\r\n\r\nclass MovieListPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handelNextBtn = this.handelNextBtn.bind(this);\r\n        this.handelPrevBtn = this.handelPrevBtn.bind(this);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n          \r\n        this.state = {\r\n            count: 1,\r\n            loading: true,\r\n            data: [],\r\n            selectedOption: null\r\n        }\r\n        this.props.dispatch(fetchMovies(this.state.count));\r\n    }\r\n\r\n    componentWillMount(){\r\n         this.props.dispatch(fetchMovies(this.state.count));\r\n    } \r\n\r\n    componentWillUnmount(){\r\n        this.props.dispatch( clearSortingData() );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n          loading: nextProps.loading,\r\n          data: nextProps.dataMovies\r\n        });\r\n    }\r\n\r\n    handelNextBtn() {\r\n        this.props.dispatch( fetchMovies(this.state.count + 1));\r\n        this.setState({ count: this.state.count + 1 });\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    handelPrevBtn() {\r\n        this.props.dispatch( fetchMovies(this.state.count - 1));\r\n        this.setState({ count: this.state.count - 1 });\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    handleChangeSelect(selectedOption){\r\n        this.props.dispatch( handleSortingData(selectedOption.value));\r\n        this.setState({ selectedOption });\r\n    }\r\n\r\n    handleMoveToSingleCard(id){\r\n        this.props.history.push(`/movie/${id}`);\r\n    }\r\n\r\n    render() {\r\n        const {loading, count, data, selectedOption} = this.state;\r\n        const templateImg = `https://image.tmdb.org/t/p/w185_and_h278_face`; \r\n        \r\n        return (\r\n            <div style={{paddingTop: '10vh'}} className='inner-container'> \r\n           \r\n                <Sorting changeFunc={this.handleChangeSelect} onChange={this.state.selectedOption} />\r\n                <div className='movies-wrapper'>\r\n\r\n                { loading  &&  <Spinner />}\r\n\r\n                    <div className='paiging-btn'>\r\n                        <div className='paiging-btn-group'>\r\n                            <button \r\n                                onClick={this.handelPrevBtn}\r\n                                disabled= {!(this.state.count - 1)}\r\n                                \r\n                                > \r\n                                    <i className=\"material-icons\">navigate_before</i>\r\n                            </button>\r\n                            <button \r\n                                onClick={this.handelNextBtn}\r\n                                disabled={false}\r\n                                >\r\n                                    <i className=\"material-icons\">navigate_next</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className='list-container inner-container'>\r\n                            {!loading && data.map( movie => {\r\n                                return <SingleCard \r\n                                key={movie.id}\r\n                                id={movie.id} \r\n                                dateRelease={movie.release_date} \r\n                                title={movie.title}\r\n                                description={movie.overview}\r\n                                img={templateImg + movie.poster_path} \r\n                                func={this.handleMoveToSingleCard.bind(this, movie.id)}\r\n                                /> \r\n                                })\r\n                            }\r\n                    </div>\r\n\r\n                    \r\n                </div>    \r\n            </div>\r\n        \r\n        )\r\n            \r\n    }\r\n}\r\n\r\nconst setStatetoProps = (state) => {\r\n        let newDataMovies = state.dataMovies.ids.map( id => { return state.dataMovies.entitis[id]});\r\n        switch(state.sorting.typeSort.payload) {\r\n            case \"asc\" :{\r\n                        return {\r\n                            dataMovies: newDataMovies.sort( (a,b) => {return (a.title > b.title)? 1 : -1 }),\r\n                            loading: state.dataMovies.loading\r\n                        } \r\n                    }\r\n            case \"desc\" :{\r\n                        return {\r\n                            dataMovies: newDataMovies.sort( (a,b) => {return (a.title > b.title)? -1 : 1 }),\r\n                            loading: state.dataMovies.loading\r\n                        } \r\n                    }\r\n            default:   return {\r\n                            dataMovies: newDataMovies,\r\n                            loading: state.dataMovies.loading\r\n                        };\r\n        }\r\n    }\r\n\r\nexport default connect(setStatetoProps)(MovieListPage)\r\n \r\n","import React from 'react';\r\nimport { Link }  from 'react-router-dom';\r\n\r\nimport './style.css';\r\nimport logo from './../../logo-db.svg';\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <header >\r\n          <div className=\"app-header inner-container\">\r\n           <a href='/'> <img src={logo} className=\"app-logo\" alt=\"logo\" /></a>\r\n           <nav className='app-header-nav'>\r\n            <ul className = 'app-nav'>\r\n              <li>\r\n                <Link to=\"/movies\" > Фильмы </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/series\"> Сериалы </Link>\r\n              </li>\r\n           \r\n            </ul>\r\n          </nav>\r\n          </div>\r\n        </header>   \r\n     )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link, Redirect} from 'react-router-dom';\r\n\r\nimport Spinner from './../Spinner';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Header from './../Header';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport styled from 'styled-components';\r\nimport './style.css';\r\nimport { fetchSingleMovie } from './../../redux/actions/singleMovieAction.js';\r\n\r\nclass SingleCardPageMovie extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.state ={\r\n            id: null,\r\n            loading: true\r\n        }\r\n        \r\n    }\r\n    componentWillMount(){\r\n        this.props.dispatch( fetchSingleMovie(this.props.match.params.id) );\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            loading: nextProps.loading,\r\n        });\r\n    }\r\n   \r\n    handleBack() {\r\n        this.props.history.push(\"/movies\");\r\n       \r\n    }\r\n\r\n    render() {\r\n        const Div = styled.div`\r\n            position: relative;\r\n            z-index: 1;\r\n            : after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                z-index: -1;\r\n\r\n                background-size: cover;\r\n                background-position: 50% 50%;\r\n                background-repeat: no-repeat;\r\n                \r\n                background-image: url(${props => props.bgi });\r\n                filter: opacity(100) grayscale(100%) contrast(130%);\r\n            }`;\r\n\r\n        console.log('singleMovie', this.props.singleMovie)\r\n        let imgFace = `https://image.tmdb.org/t/p/w300_and_h450_face`;\r\n        let imgBG = 'https://image.tmdb.org/t/p/w1400_and_h450_face/';\r\n\r\n        const {loading, id} = this.state;\r\n\r\n       \r\n        return (\r\n            <section style={{paddingTop: '10vh'}}> \r\n                { loading  &&  <Spinner /> }\r\n                { !loading && \r\n                    <Div  bgi ={imgBG + this.props.singleMovie.backdrop_path}>\r\n                        <div className='bg-customer'>\r\n                            <div className='content-container' >\r\n                                <Card className='smp-card'>\r\n                                    <div className='smp-card-wrapper'>\r\n                                        <CardMedia\r\n                                            className='smp-card-media'\r\n                                            image={imgFace + this.props.singleMovie.poster_path}\r\n                                            title=\"Live from space album cover\"\r\n                                        />\r\n                                        \r\n                                        <CardContent className='smp-card-content'>\r\n                                            <div className='smp-card-title'>\r\n                                                <Typography component=\"h1\" variant=\"title\" >\r\n                                                    {this.props.singleMovie.title}\r\n                                                </Typography>\r\n                                                <Typography component=\"span\" variant=\"subtitle1\"  >\r\n                                                    ({this.props.singleMovie.release_date})\r\n                                                </Typography>\r\n                                            </div>\r\n\r\n                                            <div className='smp-card-descr'>\r\n                                                <Typography component=\"p\" >\r\n                                                    {this.props.singleMovie.overview}\r\n                                                </Typography>\r\n                                            </div>\r\n\r\n                                            <IconButton \r\n                                                aria-label=\"arrow_back\" \r\n                                                onClick={this.handleBack}\r\n                                                className='smp-btn-back'\r\n                                                >\r\n                                                <i className=\"material-icons\"> arrow_back </i>\r\n                                            </IconButton>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Div>\r\n                        \r\n                }\r\n              \r\n\r\n            </section>  \r\n            );\r\n    }// render\r\n\r\n}//end class\r\n\r\n\r\nfunction mapStateToProps(state, props){\r\n    // console.log(\"state single movie\", state )\r\n    // console.log('props single movie', props)\r\n  \r\n    const id = props.match.params.id;\r\n    return {\r\n        singleMovie: state.dataMovies.entitis[id],\r\n        loading: state.dataMovies.loading\r\n    }\r\n}\r\n \r\nexport default withRouter(connect(mapStateToProps)(SingleCardPageMovie))","import Api from './../../api.js';\r\nimport { SINGLE_MOVIE } from '../constants/globals.js';\r\nimport { FETCH_SINGLE_MOVIE_SUCCESS  } from '../constants/actionTypes.js';\r\nimport { fetchMovies } from './moviesListAction';\r\n\r\n\r\nexport const fetchSingleMovieSuccess = () => ({\r\n    type: 'FETCH_SINGLE_MOVIE_SUCCESS',\r\n    \r\n});\r\n\r\nexport const fetchSingleMovie = (id) => (dispatch, getState) => {\r\n  dispatch(fetchMovies(localStorage.getItem('pageListMovie')));\r\n  dispatch(fetchSingleMovieSuccess());\r\n\r\n};\r\n\r\n\r\n\r\n","import Api from './../../api.js';\r\nimport { MOVIES } from './../constants/globals.js';\r\nimport {FETCH_SERIES_BEGIN ,FETCH_SERIES_SUCCESS ,FETCH_SERIES_ERROR  } from './../constants/actionTypes.js';\r\n\r\nexport const fetchSeriesBegin = () => ({\r\n     type: 'FETCH_SERIES_BEGIN'\r\n});\r\n\r\nexport const fetchSeriesSuccess = (payload) => ({\r\n    type: 'FETCH_SERIES_SUCCESS',\r\n    payload: { payload },\r\n});\r\n\r\nexport const fetchSeriesError = (err) => ({ \r\n  type: 'FETCH_SERIES_ERROR',\r\n  payload: { err },\r\n})\r\n\r\nexport const fetchSeries = (page) => (dispatch, getState) => {\r\n  dispatch(fetchSeriesBegin());\r\n\r\n  Api.getSeriesDataList(page).then( movies => {\r\n    localStorage.setItem('pageListSeries', page);\r\n    dispatch(fetchSeriesSuccess(movies));\r\n  })\r\n  .catch(error => dispatch(fetchSeriesError(error)));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport SingleCard from './../SingleCard';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { fetchSeries } from './../../redux/actions/seriesListAction.js';\r\nimport { handleSortingData, clearSortingData } from './../../redux/actions/sortingAction.js';\r\nimport Spinner  from './../Spinner';\r\nimport Sorting from './../Sorting';\r\n\r\nimport './style.css';\r\n\r\nclass SeriesListPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handelNextBtn = this.handelNextBtn.bind(this);\r\n        this.handelPrevBtn = this.handelPrevBtn.bind(this);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n        \r\n        this.state = {\r\n            count: 1,\r\n            loading: true,\r\n            data: [],\r\n            selectedOption: null\r\n        }\r\n        this.props.dispatch(fetchSeries(this.state.count));\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n          loading: nextProps.loading,\r\n          data: nextProps.dataSeries\r\n        });\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.dispatch( clearSortingData() );\r\n    }\r\n\r\n    handelNextBtn() {\r\n        this.props.dispatch( fetchSeries(this.state.count + 1));\r\n        this.setState({ count: this.state.count + 1 });\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    handelPrevBtn() {\r\n        this.props.dispatch( fetchSeries(this.state.count - 1));\r\n        this.setState({ count: this.state.count - 1 });\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    handleChangeSelect(selectedOption) {\r\n        this.props.dispatch( handleSortingData(selectedOption.value));\r\n        this.setState({ selectedOption });\r\n    }\r\n\r\n    handleMoveToSingleCard(id) {  \r\n        this.props.history.push(`/tv-show/${id}`);\r\n    }\r\n\r\n    render() {\r\n        const {loading, count, data, selectedOption} = this.state;\r\n        const templateImg = `https://image.tmdb.org/t/p/w185_and_h278_face`; \r\n        \r\n        return (\r\n            <div style={{paddingTop: '10vh'}} className='inner-conrainer'> \r\n           \r\n                <Sorting changeFunc={this.handleChangeSelect} onChange={this.state.selectedOption} />\r\n                <div className='movies-wrapper'>\r\n\r\n                { loading  &&  <Spinner />}\r\n\r\n                <div className='paiging-btn'>\r\n                    <div className='paiging-btn-group'>\r\n                        <button \r\n                            onClick={this.handelPrevBtn}\r\n                            disabled= {!(this.state.count - 1)}\r\n                            \r\n                            > \r\n                                <i className=\"material-icons\">navigate_before</i>\r\n                        </button>\r\n                        <button \r\n                            onClick={this.handelNextBtn}\r\n                            disabled={false}\r\n                            >\r\n                                <i className=\"material-icons\">navigate_next</i>\r\n                        </button>\r\n                    </div>\r\n                 </div>\r\n                    <div className='list-container inner-container'>\r\n                            {!loading && data.map( series => {\r\n                                return <SingleCard \r\n                                key={series.id}\r\n                                id={series.id} \r\n                                dateRelease={series.first_air_date  } \r\n                                title={series.name}\r\n                                description={series.overview}\r\n                                img={templateImg + series.poster_path} \r\n                                func={this.handleMoveToSingleCard.bind(this, series.id)}\r\n                                /> \r\n                                })\r\n                            }\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n        \r\n        )\r\n            \r\n    }\r\n}\r\n\r\nconst setStatetoProps = (state) => {\r\n  \r\n        let newdataSeries = state.dataSeries.ids.map( id => { return state.dataSeries.entitis[id]});\r\n        switch(state.sorting.typeSort.payload) {\r\n            case \"asc\" :{\r\n                        return {\r\n                            dataSeries: newdataSeries.sort( (a,b) => {return (a.title > b.title)? 1 : -1 }),\r\n                            loading: state.dataSeries.loading\r\n                        } \r\n                    }\r\n            case \"desc\" :{\r\n                        return {\r\n                            dataSeries: newdataSeries.sort( (a,b) => {return (a.title > b.title)? -1 : 1 }),\r\n                            loading: state.dataSeries.loading\r\n                        } \r\n                    }\r\n            default:   return {\r\n                            dataSeries: newdataSeries,\r\n                            loading: state.dataSeries.loading\r\n                        };\r\n        }\r\n    }\r\n\r\nexport default connect(setStatetoProps)(SeriesListPage)\r\n \r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link, Redirect} from 'react-router-dom';\r\n\r\nimport Spinner from './../Spinner';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Header from './../Header';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport styled from 'styled-components';\r\nimport './style.css';\r\nimport { fetchSingleSeries } from './../../redux/actions/singleSeriesAction.js';\r\n\r\nclass SingleCardPageSeries extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.state ={\r\n            id: null,\r\n            loading: true\r\n        }\r\n    console.log(\"1111111111111111111111111111\")    \r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.dispatch( fetchSingleSeries(this.props.match.params.id) );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            loading: nextProps.loading,\r\n        });\r\n    }\r\n   \r\n    handleBack() {\r\n        this.props.history.push(\"/series\");\r\n    }\r\n\r\n    render() { \r\n        \r\n        const Div = styled.div`\r\n            position: relative;\r\n            z-index: 1;\r\n            : after {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                z-index: -1;\r\n\r\n                background-size: cover;\r\n                background-position: 50% 50%;\r\n                background-repeat: no-repeat;\r\n                \r\n                background-image: url(${props => props.bgi });\r\n                filter: opacity(100) grayscale(100%) contrast(130%);\r\n            }`;\r\n\r\n        console.log('singleSeries', this.props.singleMovie)\r\n        let imgFace = `https://image.tmdb.org/t/p/w300_and_h450_face`;\r\n        let imgBG = 'https://image.tmdb.org/t/p/w1400_and_h450_face/';\r\n\r\n        const {loading, id} = this.state;\r\n\r\n       \r\n        return (\r\n            <section style={{paddingTop: '10vh'}}> \r\n                { loading  &&  <Spinner /> }\r\n                { !loading && \r\n                    <Div  bgi ={imgBG + this.props.singleSeries.backdrop_path}>\r\n                        <div className='bg-customer'>\r\n                            <div className='content-container' >\r\n                                <Card className='smp-card'>\r\n                                    <div className='smp-card-wrapper'>\r\n                                        <CardMedia\r\n                                            className='smp-card-media'\r\n                                            image={imgFace + this.props.singleSeries.poster_path}\r\n                                            title=\"Live from space album cover\"\r\n                                        />\r\n                                        \r\n                                        <CardContent className='smp-card-content'>\r\n                                            <div className='smp-card-title'>\r\n                                                <Typography component=\"h1\" variant=\"title\" >\r\n                                                    {this.props.singleSeries.name}\r\n                                                </Typography>\r\n                                                <Typography component=\"span\" variant=\"subtitle1\"  >\r\n                                                    ({this.props.singleSeries.first_air_date})\r\n                                                </Typography>\r\n                                            </div>\r\n\r\n                                            <div className='smp-card-descr'>\r\n                                                <Typography component=\"p\" >\r\n                                                    {this.props.singleSeries.overview}\r\n                                                </Typography>\r\n                                            </div>\r\n\r\n                                            <IconButton \r\n                                                aria-label=\"arrow_back\" \r\n                                                onClick={this.handleBack}\r\n                                                className='smp-btn-back'\r\n                                                >\r\n                                                <i className=\"material-icons\"> arrow_back </i>\r\n                                            </IconButton>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Div>\r\n                        \r\n                }\r\n              \r\n\r\n            </section>  \r\n           );\r\n    }// render\r\n\r\n}//end class\r\n\r\nfunction mapStateToProps(state, props){\r\n    // console.log(\"state single series\", state.dataSeries )\r\n    console.log('props single series', state.dataSeries.entitis[props.match.params.id])\r\n  \r\n    const id = props.match.params.id;\r\n    return {\r\n        singleSeries: state.dataSeries.entitis[id],\r\n        loading: state.dataSeries.loading\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps)(SingleCardPageSeries))","import Api from './../../api.js';\r\nimport { SINGLE_MOVIE } from '../constants/globals.js';\r\nimport {  FETCH_SINGLE_SERIES_SUCCESS } from '../constants/actionTypes.js';\r\nimport { fetchSeries } from './seriesListAction.js';\r\n\r\n\r\n\r\nexport const fetchSingleSeriesSuccess = (payload) => ({\r\n    type: 'FETCH_SINGLE_SERIES_SUCCESS',\r\n    payload: { payload },\r\n});\r\n\r\nexport const fetchSingleSeries = (id) => (dispatch, getState) => {\r\n  dispatch(fetchSeries(localStorage.getItem('pageListSeries')));\r\n  dispatch(fetchSingleSeriesSuccess());\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom';\n\nimport MovieListPage    from './components/MovieListPage';\nimport SingleMoviePage  from './components/SingleMoviePage';\n\nimport SeriesListPage   from './components/SeriesListPage';\nimport SingleSeriesPage from './components/SingleSeriesPage';\nimport Header from './components/Header';\nimport './App.css';\nimport {MOVIES_PATH, SINGLE_MOVIE_PATH, SERIES_PATH, SINGLE_SERIES_PATH } from './redux/constants/routing.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super();\n  }\n  render() {\n    return (\n      <div className=\"app-main\">\n        <Header />\n        <Switch>   \n          <Route path={MOVIES_PATH} component = { MovieListPage } /> \n          <Route path={SINGLE_MOVIE_PATH} component = { SingleMoviePage } /> \n          <Route path={SERIES_PATH} component = { SeriesListPage } /> \n          <Route path={SINGLE_SERIES_PATH} component = { SingleSeriesPage } /> \n          <Redirect to={MOVIES_PATH} />\n        </Switch>\n     </div>\n    );\n  }\n}\n\nexport default App;\n","export const MAIN_PATH = '/';\r\n\r\nexport const SERIES_PATH = '/series';\r\nexport const SINGLE_SERIES_PATH = '/tv-show/:id';\r\n\r\nexport const MOVIES_PATH = '/movies';\r\nexport const SINGLE_MOVIE_PATH = '/movie/:id';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store  from './redux/store.js';\nimport { ConnectedRouter } from \"react-router-redux\";\nimport { history } from './history.js';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />   \n    </ConnectedRouter>\n  </Provider>  \n  , document.getElementById('root')\n);\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo-db.02a9430b.svg\";"],"sourceRoot":""}